{"code":"import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport Question from '../question';\nimport Answer from '../answer';\nimport './index.less';\nvar Chat = function (_a) {\n    var data = _a.data, className = _a.className, onCopy = _a.onCopy, domScrollFn = _a.domScrollFn, onGetScrollSwicth = _a.onGetScrollSwicth, QuestionCom = _a.Question, AnswerCom = _a.Answer;\n    var answer = data.answer, question = data.question, isDone = data.isDone, status = data.status;\n    useEffect(function () {\n        if (onGetScrollSwicth()) {\n            domScrollFn();\n        }\n    }, [answer]);\n    return (React.createElement(\"div\", { id: data === null || data === void 0 ? void 0 : data.id, className: classNames('chat-wrap', className) },\n        QuestionCom\n            ? React.createElement(QuestionCom, { data: question })\n            : React.createElement(Question, { data: question, onCopy: onCopy }),\n        AnswerCom\n            ? React.createElement(AnswerCom, { data: answer, isDone: isDone, status: status })\n            : React.createElement(Answer, { data: answer, isDone: isDone, status: status, onCopy: onCopy })));\n};\nexport default Chat;\n","references":["/Users/chenqinyang/Desktop/chat-requset-rollup/node_modules/@types/react/index.d.ts","/Users/chenqinyang/Desktop/chat-requset-rollup/node_modules/classnames/index.d.ts","/Users/chenqinyang/Desktop/chat-requset-rollup/src/index.tsx","/Users/chenqinyang/Desktop/chat-requset-rollup/src/components/question/index.tsx","/Users/chenqinyang/Desktop/chat-requset-rollup/src/components/answer/index.tsx"],"dts":{"name":"/Users/chenqinyang/Desktop/chat-requset-rollup/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/chat/index.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\nimport { IItem } from '../../index';\nimport './index.less';\nexport interface AnswerProps {\n    data: string;\n    isDone?: boolean;\n    status?: 1 | 2 | 3 | 4;\n}\ninterface IProps {\n    data: IItem;\n    domScrollFn: () => void;\n    onCopy?: (type: 'question' | 'answer') => void;\n    onGetScrollSwicth: () => boolean;\n    className?: string;\n    Question?: ({ data }: {\n        data: string;\n    }) => JSX.Element;\n    Answer?: ({ data, isDone, status }: AnswerProps) => JSX.Element;\n}\ndeclare const Chat: ({ data, className, onCopy, domScrollFn, onGetScrollSwicth, Question: QuestionCom, Answer: AnswerCom, }: IProps) => JSX.Element;\nexport default Chat;\n"}}
