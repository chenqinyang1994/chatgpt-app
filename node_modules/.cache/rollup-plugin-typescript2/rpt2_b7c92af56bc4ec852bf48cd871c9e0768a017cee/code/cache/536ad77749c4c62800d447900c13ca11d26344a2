{"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport axios from 'axios';\nimport baseConfig from '../base.config';\nimport { api } from '../constants/api';\nimport { authToken } from './authService';\nvar httpError = baseConfig.httpError;\nvar notToast = ['payment/status'];\nvar request = function (options) { return __awaiter(void 0, void 0, void 0, function () {\n    var url, _a, data, _b, headers, _c, method, useURLParam, res, err, err_1;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                url = options.url, _a = options.data, data = _a === void 0 ? {} : _a, _b = options.headers, headers = _b === void 0 ? {} : _b, _c = options.method, method = _c === void 0 ? 'get' : _c;\n                useURLParam = ['GET', 'DELETE'].indexOf(method.toUpperCase()) >= 0;\n                _d.label = 1;\n            case 1:\n                _d.trys.push([1, 3, , 4]);\n                return [4 /*yield*/, axios({\n                        url: \"\".concat(api).concat(url),\n                        data: !useURLParam ? data : undefined,\n                        params: useURLParam ? data : undefined,\n                        method: method,\n                        headers: __assign(__assign({}, headers), { Authorization: authToken.get() }),\n                    })];\n            case 2:\n                res = _d.sent();\n                if (notToast.some(function (el) { return url.startsWith(el); })) {\n                    return [2 /*return*/, res.data];\n                }\n                // netWorkState.set(true);\n                // failureTime = 0;\n                if (res.status !== 200 || !res.data || res.data.code !== 200) {\n                    err = new Error();\n                    err.response = res;\n                    throw err;\n                }\n                // eslint-disable-next-line no-console\n                console.log('request success:', url, res);\n                return [2 /*return*/, res.data];\n            case 3:\n                err_1 = _d.sent();\n                // eslint-disable-next-line no-console\n                console.log('request failed:', options, err_1);\n                if (err_1.response && err_1.response.data && err_1.response.data.code === 401) {\n                    authToken.remove();\n                    // window.location.href = `/login`;\n                }\n                if (err_1.response && err_1.response.data && err_1.response.data.error) {\n                    // // 连续断网 3 次\n                    // failureTime += 1;\n                    // if (failureTime >= MaxFailureTime) {\n                    //   netWorkState.set(false);\n                    // }\n                    httpError && httpError(err_1.response.data.error);\n                    return [2 /*return*/, { code: -1, msg: err_1.response.data.error }];\n                }\n                httpError && httpError(err_1.message);\n                return [2 /*return*/, { code: -1, msg: err_1.message }];\n            case 4: return [2 /*return*/];\n        }\n    });\n}); };\nexport default request;\n","references":["/Users/chenqinyang/Desktop/chat-requset-rollup/node_modules/axios/index.d.ts","/Users/chenqinyang/Desktop/chat-requset-rollup/node_modules/axios/index.d.ts","/Users/chenqinyang/Desktop/chat-requset-rollup/src/base.config.ts","/Users/chenqinyang/Desktop/chat-requset-rollup/src/constants/api.ts","/Users/chenqinyang/Desktop/chat-requset-rollup/src/utils/authService.ts"],"dts":{"name":"/Users/chenqinyang/Desktop/chat-requset-rollup/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/request.d.ts","writeByteOrderMark":false,"text":"import type { Method } from 'axios';\ntype Ioptions = {\n    url: string;\n    data?: any;\n    headers?: any;\n    method: Method;\n};\ndeclare const request: (options: Ioptions) => Promise<any>;\nexport default request;\n"}}
